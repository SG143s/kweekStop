"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/transaction/pushOrder";
exports.ids = ["pages/api/transaction/pushOrder"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "(api)/./pages/api/transaction/pushOrder.js":
/*!********************************************!*\
  !*** ./pages/api/transaction/pushOrder.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// Import PrismaClient\nconst { PrismaClient  } = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\nconst prisma = new PrismaClient();\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        const { userid , order_id , transaction_id , payment_type , status_code , gross_amount , items , costFee  } = req.body;\n        const status = \"paid\";\n        try {\n            const createPaymentDetails = await prisma.paymentdetails.create({\n                data: {\n                    id: transaction_id,\n                    total: gross_amount,\n                    status\n                }\n            });\n            const createPaymentService = await prisma.paymentservice.create({\n                data: {\n                    id: transaction_id,\n                    name: payment_type,\n                    fee: gross_amount\n                }\n            });\n            const createdOrder = await prisma.orders.create({\n                data: {\n                    id: order_id,\n                    userid,\n                    paydetid: transaction_id,\n                    payserviceid: transaction_id\n                }\n            });\n            const createdDeliveryService = await prisma.deliveryservice.create({\n                data: {\n                    id: order_id,\n                    name: \"jne\",\n                    fee: costFee\n                }\n            });\n            console.log(\"items: \", items);\n            for (const item of items){\n                const newOrderDetail = await prisma.orderdetails.create({\n                    data: {\n                        orderid: order_id,\n                        productid: item.productid,\n                        quantity: item.quantity,\n                        deliveryid: order_id\n                    }\n                });\n                console.log(\"New order detail created:\", newOrderDetail);\n            }\n            res.status(200).json({\n                message: \"Success\",\n                order: createdOrder\n            });\n        } catch (error) {\n            res.status(500).json({\n                message: \"Error\",\n                error: error.message\n            });\n        }\n    } else {\n        res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvdHJhbnNhY3Rpb24vcHVzaE9yZGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxzQkFBc0I7QUFDdEIsTUFBTSxFQUFFQSxhQUFZLEVBQUUsR0FBR0MsbUJBQU9BLENBQUM7QUFDakMsTUFBTUMsU0FBUyxJQUFJRjtBQUVKLGVBQWVHLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUM1QyxJQUFJRCxJQUFJRSxXQUFXLFFBQVE7UUFDekIsTUFBTSxFQUFFQyxPQUFNLEVBQUVDLFNBQVEsRUFBRUMsZUFBYyxFQUFFQyxhQUFZLEVBQUVDLFlBQVcsRUFBRUMsYUFBWSxFQUFFQyxNQUFLLEVBQUVDLFFBQU8sRUFBRSxHQUFHVixJQUFJVztRQUUxRyxNQUFNQyxTQUFTO1FBRWYsSUFBSTtZQUNGLE1BQU1DLHVCQUF1QixNQUFNZixPQUFPZ0IsZUFBZUMsT0FBTztnQkFDOURDLE1BQU07b0JBQ0pDLElBQUlaO29CQUNKYSxPQUFPVjtvQkFDUEk7Z0JBQ0Y7WUFDRjtZQUVBLE1BQU1PLHVCQUF1QixNQUFNckIsT0FBT3NCLGVBQWVMLE9BQU87Z0JBQzlEQyxNQUFNO29CQUNKQyxJQUFJWjtvQkFDSmdCLE1BQU1mO29CQUNOZ0IsS0FBS2Q7Z0JBQ1A7WUFDRjtZQUVBLE1BQU1lLGVBQWUsTUFBTXpCLE9BQU8wQixPQUFPVCxPQUFPO2dCQUM5Q0MsTUFBTTtvQkFDSkMsSUFBSWI7b0JBQ0pEO29CQUNBc0IsVUFBVXBCO29CQUNWcUIsY0FBY3JCO2dCQUNoQjtZQUNGO1lBRUEsTUFBTXNCLHlCQUF5QixNQUFNN0IsT0FBTzhCLGdCQUFnQmIsT0FBTztnQkFDakVDLE1BQU07b0JBQ0pDLElBQUliO29CQUNKaUIsTUFBTTtvQkFDTkMsS0FBS1o7Z0JBQ1A7WUFDRjtZQUVBbUIsUUFBUUMsSUFBSSxXQUFXckI7WUFFdkIsS0FBSyxNQUFNc0IsUUFBUXRCLE1BQU87Z0JBQ3hCLE1BQU11QixpQkFBaUIsTUFBTWxDLE9BQU9tQyxhQUFhbEIsT0FBTztvQkFDdERDLE1BQU07d0JBQ0prQixTQUFTOUI7d0JBQ1QrQixXQUFXSixLQUFLSTt3QkFDaEJDLFVBQVVMLEtBQUtLO3dCQUNmQyxZQUFZakM7b0JBQ2Q7Z0JBQ0Y7Z0JBQ0F5QixRQUFRQyxJQUFJLDZCQUE2QkU7WUFDM0M7WUFFQS9CLElBQUlXLE9BQU8sS0FBSzBCLEtBQUs7Z0JBQUVDLFNBQVM7Z0JBQVdDLE9BQU9qQjtZQUFhO1FBQ2pFLEVBQUUsT0FBT2tCLE9BQU87WUFDZHhDLElBQUlXLE9BQU8sS0FBSzBCLEtBQUs7Z0JBQUVDLFNBQVM7Z0JBQVNFLE9BQU9BLE1BQU1GO1lBQVE7UUFDaEU7SUFDRixPQUFPO1FBQ0x0QyxJQUFJVyxPQUFPLEtBQUswQixLQUFLO1lBQUVDLFNBQVM7UUFBcUI7SUFDdkQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2t3ZWVrc3RvcC8uL3BhZ2VzL2FwaS90cmFuc2FjdGlvbi9wdXNoT3JkZXIuanM/YWU0MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnQgUHJpc21hQ2xpZW50XHJcbmNvbnN0IHsgUHJpc21hQ2xpZW50IH0gPSByZXF1aXJlKCdAcHJpc21hL2NsaWVudCcpO1xyXG5jb25zdCBwcmlzbWEgPSBuZXcgUHJpc21hQ2xpZW50KCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XHJcbiAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xyXG4gICAgY29uc3QgeyB1c2VyaWQsIG9yZGVyX2lkLCB0cmFuc2FjdGlvbl9pZCwgcGF5bWVudF90eXBlLCBzdGF0dXNfY29kZSwgZ3Jvc3NfYW1vdW50LCBpdGVtcywgY29zdEZlZSB9ID0gcmVxLmJvZHk7XHJcblxyXG4gICAgY29uc3Qgc3RhdHVzID0gXCJwYWlkXCI7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgY3JlYXRlUGF5bWVudERldGFpbHMgPSBhd2FpdCBwcmlzbWEucGF5bWVudGRldGFpbHMuY3JlYXRlKHtcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICBpZDogdHJhbnNhY3Rpb25faWQsXHJcbiAgICAgICAgICB0b3RhbDogZ3Jvc3NfYW1vdW50LFxyXG4gICAgICAgICAgc3RhdHVzXHJcbiAgICAgICAgfSxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBjb25zdCBjcmVhdGVQYXltZW50U2VydmljZSA9IGF3YWl0IHByaXNtYS5wYXltZW50c2VydmljZS5jcmVhdGUoe1xyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgIGlkOiB0cmFuc2FjdGlvbl9pZCxcclxuICAgICAgICAgIG5hbWU6IHBheW1lbnRfdHlwZSxcclxuICAgICAgICAgIGZlZTogZ3Jvc3NfYW1vdW50XHJcbiAgICAgICAgfSxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBjb25zdCBjcmVhdGVkT3JkZXIgPSBhd2FpdCBwcmlzbWEub3JkZXJzLmNyZWF0ZSh7XHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgaWQ6IG9yZGVyX2lkLFxyXG4gICAgICAgICAgdXNlcmlkLFxyXG4gICAgICAgICAgcGF5ZGV0aWQ6IHRyYW5zYWN0aW9uX2lkLFxyXG4gICAgICAgICAgcGF5c2VydmljZWlkOiB0cmFuc2FjdGlvbl9pZCxcclxuICAgICAgICB9LFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGNvbnN0IGNyZWF0ZWREZWxpdmVyeVNlcnZpY2UgPSBhd2FpdCBwcmlzbWEuZGVsaXZlcnlzZXJ2aWNlLmNyZWF0ZSh7XHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgaWQ6IG9yZGVyX2lkLFxyXG4gICAgICAgICAgbmFtZTogXCJqbmVcIixcclxuICAgICAgICAgIGZlZTogY29zdEZlZVxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgY29uc29sZS5sb2coXCJpdGVtczogXCIsIGl0ZW1zKVxyXG5cclxuICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGl0ZW1zKSB7XHJcbiAgICAgICAgY29uc3QgbmV3T3JkZXJEZXRhaWwgPSBhd2FpdCBwcmlzbWEub3JkZXJkZXRhaWxzLmNyZWF0ZSh7XHJcbiAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgIG9yZGVyaWQ6IG9yZGVyX2lkLFxyXG4gICAgICAgICAgICBwcm9kdWN0aWQ6IGl0ZW0ucHJvZHVjdGlkLFxyXG4gICAgICAgICAgICBxdWFudGl0eTogaXRlbS5xdWFudGl0eSxcclxuICAgICAgICAgICAgZGVsaXZlcnlpZDogb3JkZXJfaWQsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdOZXcgb3JkZXIgZGV0YWlsIGNyZWF0ZWQ6JywgbmV3T3JkZXJEZXRhaWwpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6ICdTdWNjZXNzJywgb3JkZXI6IGNyZWF0ZWRPcmRlciB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogJ0Vycm9yJywgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgbWVzc2FnZTogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJyZXF1aXJlIiwicHJpc21hIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInVzZXJpZCIsIm9yZGVyX2lkIiwidHJhbnNhY3Rpb25faWQiLCJwYXltZW50X3R5cGUiLCJzdGF0dXNfY29kZSIsImdyb3NzX2Ftb3VudCIsIml0ZW1zIiwiY29zdEZlZSIsImJvZHkiLCJzdGF0dXMiLCJjcmVhdGVQYXltZW50RGV0YWlscyIsInBheW1lbnRkZXRhaWxzIiwiY3JlYXRlIiwiZGF0YSIsImlkIiwidG90YWwiLCJjcmVhdGVQYXltZW50U2VydmljZSIsInBheW1lbnRzZXJ2aWNlIiwibmFtZSIsImZlZSIsImNyZWF0ZWRPcmRlciIsIm9yZGVycyIsInBheWRldGlkIiwicGF5c2VydmljZWlkIiwiY3JlYXRlZERlbGl2ZXJ5U2VydmljZSIsImRlbGl2ZXJ5c2VydmljZSIsImNvbnNvbGUiLCJsb2ciLCJpdGVtIiwibmV3T3JkZXJEZXRhaWwiLCJvcmRlcmRldGFpbHMiLCJvcmRlcmlkIiwicHJvZHVjdGlkIiwicXVhbnRpdHkiLCJkZWxpdmVyeWlkIiwianNvbiIsIm1lc3NhZ2UiLCJvcmRlciIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/transaction/pushOrder.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/transaction/pushOrder.js"));
module.exports = __webpack_exports__;

})();